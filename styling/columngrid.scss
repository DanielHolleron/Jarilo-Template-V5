/* == COLUMN CSS == */

$columns: 12;

@for $i from 1 through $columns {
    .column.is-#{$i} {
        flex: 0 0 100% / $columns * $i
    }
}

@for $i from 1 through $columns {
    .column.lg-#{$i} {
        @media (min-width: 1024px) {
            flex: 0 0 100% / $columns * $i
        }
    }
}

@for $i from 1 through $columns {
    .column.md-#{$i} {
        @media (min-width: 768px) and (max-width: 1024px) {
            flex: 0 0 100% / $columns * $i
        }
    }
}

@for $i from 1 through $columns {
    .column.sm-#{$i} {
        @media (min-width: 0px) and (max-width: 768px) {
            flex: 0 0 100% / $columns * $i
        }
    }
}

@media (min-width: 1024px) {
    .lg-none { display: none; }
}

@media (min-width: 768px) and (max-width: 1024px) {
    .md-none { display: none; }
}

@media (min-width: 0px) and (max-width: 768px) {
    .sm-none { display: none; }
}

.row {
    display: flex;
    flex-wrap: wrap;
}

.row:not(.mob-col) {
    @media (max-width: 768px) {
        display: block;
    }
}

.column {
    flex: 1 1 0;
}

.column > :is(div, a, span, label, section) {
    margin: 7px;
    display: block;
}

.column.is-narrow {
    flex: none;
}

.column.v-flex > div {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100%;
    margin-top: 0;
    margin-bottom: 0;
}

.column-inner {
    border: 1px solid #eee;
}

// CODE FOR GRID SYSTEM

.row .row {
    margin: 0;
}

.row.inner.stacked {
    flex-direction: column;
}